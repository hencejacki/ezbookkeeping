name: Build for RISC-V and Other Architectures

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/ezbookkeeping
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binaries for linux/riscv64
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          platforms: linux/riscv64
          push: false
          build-args: |
            RELEASE_BUILD=1
            BUILD_PIPELINE=1
            CHECK_3RD_API=${{ vars.CHECK_3RD_API }}
            SKIP_TESTS=${{ vars.SKIP_TESTS }}
          outputs: type=docker,dest=/tmp/ezbookkeeping-riscv64.tar

  upload-linux-artifact:
    needs: build-binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: linux/riscv64
            arch_alias: linux-riscv64
            tar_file: /tmp/ezbookkeeping-riscv64.tar
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract packaged files for ${{ matrix.arch }}
        run: |
          mkdir -p ezbookkeeping
          docker load --input ${{ matrix.tar_file }}
          cid=$(docker create ezbookkeeping:latest)
          docker cp ${cid}:/ezbookkeeping ./ezbookkeeping
          docker rm ${cid}
          cd ezbookkeeping
          tar -czf ../ezbookkeeping-${{ github.ref_name }}-${{ matrix.arch_alias }}.tar.gz *
          cd ..
          rm -rf ezbookkeeping

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ezbookkeeping-${{ github.ref_name }}-${{ matrix.arch_alias }}
          path: ezbookkeeping-${{ github.ref_name }}-${{ matrix.arch_alias }}.tar.gz
          if-no-files-found: error

  publish-release:
    runs-on: ubuntu-latest
    needs:
      - upload-linux-artifact
    steps:
      - name: Download linux-riscv64 packaged files
        uses: actions/download-artifact@v4
        with:
          name: ezbookkeeping-${{ github.ref_name }}-linux-riscv64
          path: ./release-files

      - name: Publish Release ${{ github.ref_name }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: ./release-files/*
          draft: false